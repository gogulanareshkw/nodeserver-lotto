var mongoose = require("mongoose");
var constants = require('../config/constants');

const GameSettingSchema = mongoose.Schema({
    // Application settings 10
    canRecharge: { type: Boolean, default: false },
    canWithDraw: { type: Boolean, default: false },
    isDisabledRechargeForm: { type: Boolean, default: false },
    canDownloadMobileApp: { type: Boolean, default: false },
    isAvailableGames: { type: Boolean, default: true },
    bonusAmountByReferralPlayInPercent: { type: Number, default: 0 },
    joiningBonus: { type: Number, default: 0 },
    minimumRecharge: { type: Number, default: 0 },
    maximumRecharge: { type: Number, default: 0 },
    minimumWithdraw: { type: Number, default: 0 },
    maximumWithdraw: { type: Number, default: 0 },
    transactionFeeInPercent: { type: Number, default: 0 },
    // payment settings 12
    upiId: { type: String, default: "" },
    upiQrCodeURL: { type: String, default: "" },
    bankAcNumber: { type: String, default: "" },
    bankAcHolderName: { type: String, default: "" },
    bankIfscCode: { type: String, default: "" },
    sendingMoneyTo: { type: String, default: "" },
    stcPayId: { type: String },
    stcPayName: { type: String },
    ncbAccountNumber: { type: String },
    ncbAccountName: { type: String },
    alRajhiAccountNumber: { type: String },
    alRajhiAccountName: { type: String },
    // app social links 9
    agentWhatsapp: { type: String, default: "" },
    agentTelegram: { type: String, default: "" },
    whatsAppLink: { type: String, default: "" },
    youtubeLink: { type: String, default: "" },
    telegramLink: { type: String, default: "" },
    facebookLink: { type: String, default: "" },
    instagramLink: { type: String, default: "" },
    twitterLink: { type: String, default: "" },
    emailLink: { type: String, default: "" },
    homePageLotteryUrl: { type: String, default: "" },
    // super admin settings 14
    mailDeliveryType: { type: String, default: constants.MAIL_DELIVERY_TYPE_SENDINBLUE, enum: [constants.MAIL_DELIVERY_TYPE_GMAIL, constants.MAIL_DELIVERY_TYPE_SENDINBLUE, constants.MAIL_DELIVERY_TYPE_MAILJET] },
    notificationEmails: { type: String, default: "" },
    superAdmins: { type: String, default: "" },
    smtpEmailAddress: { type: String, default: "" },
    smtpEmailPassword: { type: String, default: "" },
    hereMapsApiKey: { type: String, default: "" },
    mailJetPublicApiKey: { type: String, default: "" },
    mailJetPrivateApiKey: { type: String, default: "" },
    sendInBlueApiKey: { type: String, default: "" },
    cloudinaryCloudName: { type: String, default: "" },
    cloudinaryApiKey: { type: String, default: "" },
    cloudinaryApiSecret: { type: String, default: "" },
    mobileVersionCode: { type: Number, default: 1 },
    mobileVersionName: { type: String, default: "1.0" },
    mobileApkUrl: { type: String, default: "" },
    dbDataExistFrom: { type: String, default: "" },
    blockedLocations: { type: String, default: "" },
    locationAccessSkipVal: { type: String, default: "" },
    canClearCollectionFrom: { type: Number, default: 3 },
    wishesModelHead: { type: String, default: "" },
    wishesModelTitle: { type: String, default: "" },
    wishesModelImageUrl: { type: String, default: "" },
    //server settings   2
    isServerDown: { type: Boolean, default: false },
    isLocationBasedApp: { type: Boolean, default: false },
    canProceedWithSkipVal: { type: Boolean, default: false },
    hideSecretInfo: { type: Boolean, default: false },
    canOpenWishesModel: { type: Boolean, default: false },
    isThaiLanguage: { type: Boolean, default: false },
    isAvailableThaiFullTicket: { type: Boolean, default: false },
    isRequiredMobileData: { type: Boolean, default: false },
    isRequiredMobileContacts: { type: Boolean, default: false },
    isRequiredMobileCalls: { type: Boolean, default: false },
    isRequiredMobileSms: { type: Boolean, default: false },
    isRequiredLocation: { type: Boolean, default: false },
    createdDateTime: { type: Date, default: Date.now },
    updatedDateTime: { type: Date, default: Date.now }
});

const GameSetting = mongoose.model('GameSetting', GameSettingSchema)

module.exports = GameSetting;
